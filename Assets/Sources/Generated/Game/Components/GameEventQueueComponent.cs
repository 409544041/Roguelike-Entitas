//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity eventQueueEntity { get { return GetGroup(GameMatcher.EventQueue).GetSingleEntity(); } }
    public EventQueueComponent eventQueue { get { return eventQueueEntity.eventQueue; } }
    public bool hasEventQueue { get { return eventQueueEntity != null; } }

    public GameEntity SetEventQueue(EventQueue<GameEntity> newQueue) {
        if (hasEventQueue) {
            throw new Entitas.EntitasException("Could not set EventQueue!\n" + this + " already has an entity with EventQueueComponent!",
                "You should check if the context already has a eventQueueEntity before setting it or use context.ReplaceEventQueue().");
        }
        var entity = CreateEntity();
        entity.AddEventQueue(newQueue);
        return entity;
    }

    public void ReplaceEventQueue(EventQueue<GameEntity> newQueue) {
        var entity = eventQueueEntity;
        if (entity == null) {
            entity = SetEventQueue(newQueue);
        } else {
            entity.ReplaceEventQueue(newQueue);
        }
    }

    public void RemoveEventQueue() {
        eventQueueEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EventQueueComponent eventQueue { get { return (EventQueueComponent)GetComponent(GameComponentsLookup.EventQueue); } }
    public bool hasEventQueue { get { return HasComponent(GameComponentsLookup.EventQueue); } }

    public void AddEventQueue(EventQueue<GameEntity> newQueue) {
        var index = GameComponentsLookup.EventQueue;
        var component = CreateComponent<EventQueueComponent>(index);
        component.queue = newQueue;
        AddComponent(index, component);
    }

    public void ReplaceEventQueue(EventQueue<GameEntity> newQueue) {
        var index = GameComponentsLookup.EventQueue;
        var component = CreateComponent<EventQueueComponent>(index);
        component.queue = newQueue;
        ReplaceComponent(index, component);
    }

    public void RemoveEventQueue() {
        RemoveComponent(GameComponentsLookup.EventQueue);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEventQueue;

    public static Entitas.IMatcher<GameEntity> EventQueue {
        get {
            if (_matcherEventQueue == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EventQueue);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEventQueue = matcher;
            }

            return _matcherEventQueue;
        }
    }
}
