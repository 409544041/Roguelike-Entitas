//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Assets.Sources.Features.Lights.Components.InLightComponent inLight { get { return (Assets.Sources.Features.Lights.Components.InLightComponent)GetComponent(GameComponentsLookup.InLight); } }
    public bool hasInLight { get { return HasComponent(GameComponentsLookup.InLight); } }

    public void AddInLight(int newValue) {
        var index = GameComponentsLookup.InLight;
        var component = CreateComponent<Assets.Sources.Features.Lights.Components.InLightComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInLight(int newValue) {
        var index = GameComponentsLookup.InLight;
        var component = CreateComponent<Assets.Sources.Features.Lights.Components.InLightComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInLight() {
        RemoveComponent(GameComponentsLookup.InLight);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInLight;

    public static Entitas.IMatcher<GameEntity> InLight {
        get {
            if (_matcherInLight == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InLight);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInLight = matcher;
            }

            return _matcherInLight;
        }
    }
}
