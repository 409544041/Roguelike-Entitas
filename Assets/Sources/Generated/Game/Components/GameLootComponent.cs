//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Assets.Sources.Features.Loot.Components;

public partial class GameEntity {

    public LootComponent loot { get { return (LootComponent)GetComponent(GameComponentsLookup.Loot); } }
    public bool hasLoot { get { return HasComponent(GameComponentsLookup.Loot); } }

    public void AddLoot(int newSeed, Assets.Sources.Helpers.Loot.LootGroupName newGroupName) {
        var index = GameComponentsLookup.Loot;
        var component = CreateComponent<LootComponent>(index);
        component.Seed = newSeed;
        component.GroupName = newGroupName;
        AddComponent(index, component);
    }

    public void ReplaceLoot(int newSeed, Assets.Sources.Helpers.Loot.LootGroupName newGroupName) {
        var index = GameComponentsLookup.Loot;
        var component = CreateComponent<LootComponent>(index);
        component.Seed = newSeed;
        component.GroupName = newGroupName;
        ReplaceComponent(index, component);
    }

    public void RemoveLoot() {
        RemoveComponent(GameComponentsLookup.Loot);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLoot;

    public static Entitas.IMatcher<GameEntity> Loot {
        get {
            if (_matcherLoot == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Loot);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLoot = matcher;
            }

            return _matcherLoot;
        }
    }
}
