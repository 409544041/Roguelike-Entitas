//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SmoothMovementComponent smoothMovement { get { return (SmoothMovementComponent)GetComponent(GameComponentsLookup.SmoothMovement); } }
    public bool hasSmoothMovement { get { return HasComponent(GameComponentsLookup.SmoothMovement); } }

    public void AddSmoothMovement(IntVector2 newTarget, float newMoveTime) {
        var index = GameComponentsLookup.SmoothMovement;
        var component = CreateComponent<SmoothMovementComponent>(index);
        component.target = newTarget;
        component.moveTime = newMoveTime;
        AddComponent(index, component);
    }

    public void ReplaceSmoothMovement(IntVector2 newTarget, float newMoveTime) {
        var index = GameComponentsLookup.SmoothMovement;
        var component = CreateComponent<SmoothMovementComponent>(index);
        component.target = newTarget;
        component.moveTime = newMoveTime;
        ReplaceComponent(index, component);
    }

    public void RemoveSmoothMovement() {
        RemoveComponent(GameComponentsLookup.SmoothMovement);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSmoothMovement;

    public static Entitas.IMatcher<GameEntity> SmoothMovement {
        get {
            if (_matcherSmoothMovement == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SmoothMovement);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSmoothMovement = matcher;
            }

            return _matcherSmoothMovement;
        }
    }
}
