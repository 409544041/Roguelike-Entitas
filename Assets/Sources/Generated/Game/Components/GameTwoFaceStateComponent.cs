//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity twoFaceStateEntity { get { return GetGroup(GameMatcher.TwoFaceState).GetSingleEntity(); } }
    public Assets.Sources.Features.AI.TwoFace.Components.TwoFaceStateComponent twoFaceState { get { return twoFaceStateEntity.twoFaceState; } }
    public bool hasTwoFaceState { get { return twoFaceStateEntity != null; } }

    public GameEntity SetTwoFaceState(float newTimeElapsed, bool newIsAngry) {
        if (hasTwoFaceState) {
            throw new Entitas.EntitasException("Could not set TwoFaceState!\n" + this + " already has an entity with Assets.Sources.Features.AI.TwoFace.Components.TwoFaceStateComponent!",
                "You should check if the context already has a twoFaceStateEntity before setting it or use context.ReplaceTwoFaceState().");
        }
        var entity = CreateEntity();
        entity.AddTwoFaceState(newTimeElapsed, newIsAngry);
        return entity;
    }

    public void ReplaceTwoFaceState(float newTimeElapsed, bool newIsAngry) {
        var entity = twoFaceStateEntity;
        if (entity == null) {
            entity = SetTwoFaceState(newTimeElapsed, newIsAngry);
        } else {
            entity.ReplaceTwoFaceState(newTimeElapsed, newIsAngry);
        }
    }

    public void RemoveTwoFaceState() {
        twoFaceStateEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Assets.Sources.Features.AI.TwoFace.Components.TwoFaceStateComponent twoFaceState { get { return (Assets.Sources.Features.AI.TwoFace.Components.TwoFaceStateComponent)GetComponent(GameComponentsLookup.TwoFaceState); } }
    public bool hasTwoFaceState { get { return HasComponent(GameComponentsLookup.TwoFaceState); } }

    public void AddTwoFaceState(float newTimeElapsed, bool newIsAngry) {
        var index = GameComponentsLookup.TwoFaceState;
        var component = CreateComponent<Assets.Sources.Features.AI.TwoFace.Components.TwoFaceStateComponent>(index);
        component.TimeElapsed = newTimeElapsed;
        component.IsAngry = newIsAngry;
        AddComponent(index, component);
    }

    public void ReplaceTwoFaceState(float newTimeElapsed, bool newIsAngry) {
        var index = GameComponentsLookup.TwoFaceState;
        var component = CreateComponent<Assets.Sources.Features.AI.TwoFace.Components.TwoFaceStateComponent>(index);
        component.TimeElapsed = newTimeElapsed;
        component.IsAngry = newIsAngry;
        ReplaceComponent(index, component);
    }

    public void RemoveTwoFaceState() {
        RemoveComponent(GameComponentsLookup.TwoFaceState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTwoFaceState;

    public static Entitas.IMatcher<GameEntity> TwoFaceState {
        get {
            if (_matcherTwoFaceState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TwoFaceState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTwoFaceState = matcher;
            }

            return _matcherTwoFaceState;
        }
    }
}
