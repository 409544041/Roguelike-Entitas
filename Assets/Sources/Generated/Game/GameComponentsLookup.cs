//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentsLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Assets.Sources.Features.MapTracker.Components;
using Assets.Sources.Features.ProcGen.Components;

public static class GameComponentsLookup {

    public const int Asset = 0;
    public const int ActionInProgress = 1;
    public const int ActionProgress = 2;
    public const int AI = 3;
    public const int JumpAI = 4;
    public const int RandomAI = 5;
    public const int ShouldAct = 6;
    public const int TwoFace = 7;
    public const int TwoFaceState = 8;
    public const int CameraTarget = 9;
    public const int Attackable = 10;
    public const int ServicesHandler = 11;
    public const int Config = 12;
    public const int Coroutine = 13;
    public const int InFog = 14;
    public const int RevealAround = 15;
    public const int Floor = 16;
    public const int GameBoard = 17;
    public const int MapTile = 18;
    public const int Solid = 19;
    public const int Wall = 20;
    public const int Init = 21;
    public const int Inventory = 22;
    public const int Item = 23;
    public const int InLight = 24;
    public const int Light = 25;
    public const int Shadow = 26;
    public const int Chest = 27;
    public const int Loot = 28;
    public const int CurrentPlayer = 29;
    public const int Player = 30;
    public const int Dead = 31;
    public const int Health = 32;
    public const int Stats = 33;
    public const int Destroyed = 34;
    public const int EventQueue = 35;
    public const int Log = 36;
    public const int MapTracked = 37;
    public const int Name = 38;
    public const int NetworkTracked = 39;
    public const int Position = 40;
    public const int RectangularMap = 41;
    public const int SheepAI = 42;
    public const int ShouldBeDestroyed = 43;
    public const int TurnBased = 44;
    public const int View = 45;
    public const int WolfAI = 46;

    public const int TotalComponents = 47;

    public static readonly string[] componentNames = {
        "Asset",
        "ActionInProgress",
        "ActionProgress",
        "AI",
        "JumpAI",
        "RandomAI",
        "ShouldAct",
        "TwoFace",
        "TwoFaceState",
        "CameraTarget",
        "Attackable",
        "ServicesHandler",
        "Config",
        "Coroutine",
        "InFog",
        "RevealAround",
        "Floor",
        "GameBoard",
        "MapTile",
        "Solid",
        "Wall",
        "Init",
        "Inventory",
        "Item",
        "InLight",
        "Light",
        "Shadow",
        "Chest",
        "Loot",
        "CurrentPlayer",
        "Player",
        "Dead",
        "Health",
        "Stats",
        "Destroyed",
        "EventQueue",
        "Log",
        "MapTracked",
        "Name",
        "NetworkTracked",
        "Position",
        "RectangularMap",
        "SheepAI",
        "ShouldBeDestroyed",
        "TurnBased",
        "View",
        "WolfAI"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(AssetComponent),
        typeof(Assets.Sources.Features.Actions.Components.ActionInProgressComponent),
        typeof(Assets.Sources.Features.Actions.Components.ActionProgressComponent),
        typeof(Assets.Sources.Features.AI.Components.AIComponent),
        typeof(Assets.Sources.Features.AI.Components.JumpAIComponent),
        typeof(Assets.Sources.Features.AI.Components.RandomAIComponent),
        typeof(Assets.Sources.Features.AI.Components.ShouldActComponent),
        typeof(Assets.Sources.Features.AI.TwoFace.Components.TwoFaceComponent),
        typeof(Assets.Sources.Features.AI.TwoFace.Components.TwoFaceStateComponent),
        typeof(Assets.Sources.Features.Camera.Components.CameraTargetComponent),
        typeof(Assets.Sources.Features.Combat.Components.AttackableComponent),
        typeof(Assets.Sources.Features.Components.ServicesHandler),
        typeof(Assets.Sources.Features.Config.ConfigComponent),
        typeof(Assets.Sources.Features.Coroutines.CoroutineComponent),
        typeof(Assets.Sources.Features.FogOfWar.Components.InFogComponent),
        typeof(Assets.Sources.Features.FogOfWar.Components.RevealAroundComponent),
        typeof(Assets.Sources.Features.GameBoard.Components.FloorComponent),
        typeof(Assets.Sources.Features.GameBoard.Components.GameBoardComponent),
        typeof(Assets.Sources.Features.GameBoard.Components.MapTileComponent),
        typeof(Assets.Sources.Features.GameBoard.Components.SolidComponent),
        typeof(Assets.Sources.Features.GameBoard.Components.WallComponent),
        typeof(Assets.Sources.Features.Init.InitComponent),
        typeof(Assets.Sources.Features.Items.Components.InventoryComponent),
        typeof(Assets.Sources.Features.Items.Components.ItemComponent),
        typeof(Assets.Sources.Features.Lights.Components.InLightComponent),
        typeof(Assets.Sources.Features.Lights.Components.LightComponent),
        typeof(Assets.Sources.Features.Lights.Components.ShadowComponent),
        typeof(Assets.Sources.Features.Loot.Components.ChestComponent),
        typeof(Assets.Sources.Features.Loot.Components.LootComponent),
        typeof(Assets.Sources.Features.Player.CurrentPlayer),
        typeof(Assets.Sources.Features.Player.PlayerComponent),
        typeof(Assets.Sources.Features.Stats.Components.DeadComponent),
        typeof(Assets.Sources.Features.Stats.Components.HealthComponent),
        typeof(Assets.Sources.Features.Stats.Components.StatsComponent),
        typeof(Destroyed),
        typeof(EventQueueComponent),
        typeof(LogComponent),
        typeof(MapTrackedComponent),
        typeof(NameComponent),
        typeof(NetworkTrackedComponent),
        typeof(PositionComponent),
        typeof(RectangularMapComponent),
        typeof(SheepAIComponent),
        typeof(ShouldBeDestroyed),
        typeof(TurnBasedComponent),
        typeof(ViewComponent),
        typeof(WolfAIComponent)
    };
}
